services:
  reverse-proxy:
    # The official v3 Traefik docker image
    image: traefik:v3.0
    ports:
      # The HTTP port
      - "80:80"
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "3000:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./192.168.1.236.nip.io+2-key.pem:/certs/192.168.1.236.nip.io+2-key.pem
      - ./192.168.1.236.nip.io+2.pem:/certs/192.168.1.236.nip.io+2.pem
      - ./traefik_v3.toml:/etc/traefik/traefik.toml
      - ./traefik_dynamic.toml:/etc/traefik/dynamic/traefik_dynamic.toml
      - ./traefik.logs.d/:/var/log/
    labels:
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"

  flaskapp:
    # Our current flask application
    image: flaskapp:latest
    build:
      dockerfile: ./Dockerfile

    expose:
      # The Web UI port
      - "5000:5000"
      - "80:80"

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`flaskapp.192.168.1.236.nip.io`)"
      - "traefik.http.services.flaskapp.loadbalancer.server.port=5000"

  whoami:
    # A container that exposes an API to show its IP address
    image: traefik/whoami

    expose:
      - "80:80"

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`whoami.192.168.1.236.nip.io`)"
      - "traefik.http.services.whoami.loadbalancer.server.port=80"